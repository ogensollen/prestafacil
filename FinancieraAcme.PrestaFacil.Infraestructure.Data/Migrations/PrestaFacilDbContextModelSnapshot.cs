// <auto-generated />
using System;
using FinancieraAcme.PrestaFacil.Infraestructure.Data.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FinancieraAcme.PrestaFacil.Infraestructure.Data.Migrations
{
    [DbContext(typeof(PrestaFacilDbContext))]
    partial class PrestaFacilDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FinancieraAcme.PrestaFacil.Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentoIdentidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("FinancieraAcme.PrestaFacil.Domain.Entities.SolicitudCabecera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("SolicitudCabeceras");
                });

            modelBuilder.Entity("FinancieraAcme.PrestaFacil.Domain.Entities.SolicitudDetalle", b =>
                {
                    b.Property<int>("SolicitudCabeceraId")
                        .HasColumnType("int");

                    b.Property<int>("Item")
                        .HasColumnType("int");

                    b.Property<string>("Producto")
                        .HasColumnType("varchar(500)");

                    b.HasKey("SolicitudCabeceraId", "Item");

                    b.ToTable("SolicitudDetalles");
                });

            modelBuilder.Entity("FinancieraAcme.PrestaFacil.Domain.Entities.SolicitudPrestamo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cliente")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontoSolicitado")
                        .HasColumnType("decimal(7,2)");

                    b.HasKey("Id");

                    b.ToTable("SolicitudPrestamos");
                });

            modelBuilder.Entity("FinancieraAcme.PrestaFacil.Domain.Entities.SolicitudCabecera", b =>
                {
                    b.HasOne("FinancieraAcme.PrestaFacil.Domain.Entities.Cliente", "Cliente")
                        .WithMany("SolicitudCabeceras")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FinancieraAcme.PrestaFacil.Domain.Entities.SolicitudDetalle", b =>
                {
                    b.HasOne("FinancieraAcme.PrestaFacil.Domain.Entities.SolicitudCabecera", "SolicitudCabecera")
                        .WithMany("SolicitudDetalles")
                        .HasForeignKey("SolicitudCabeceraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
